var searchIndex = JSON.parse('{\
"chemfiles":{"doc":"Chemfiles is a multi-language library written in modern …","t":"NNDDDENENNNNDNNDDNDNDNNDENNNDDDNNENNNDDDNNNDDDNNLLLLLLLFLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMLLLLLLLLLLLLLLLLLMLLLLLLMLMLLLLLLMLLLLLLLLLLLLLLLLLLLLFLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLFLLLLM","n":["Amide","Aromatic","Atom","AtomMut","AtomRef","BondOrder","Bool","CellShape","ChemfilesError","ConfigurationError","Double","Double","Error","FileError","FormatError","FormatMetadata","Frame","Infinite","Match","MemoryError","MemoryTrajectoryReader","Orthorhombic","OutOfBounds","PropertiesIter","Property","PropertyError","Quadruple","Quintuplet","Residue","ResidueRef","Selection","SelectionError","Single","Status","StdCppError","String","Success","Topology","TopologyRef","Trajectory","Triclinic","Triple","UTF8PathError","UnitCell","UnitCellMut","UnitCellRef","Unknown","Vector3D","add_atom","add_atom","add_atom","add_bond","add_bond","add_bond_with_order","add_bond_with_order","add_configuration","add_residue","add_residue","add_velocities","angle","angles","angles","angles_count","are_linked","atom","atom","atom_mut","atom_mut","atomic_number","atomic_type","atoms","atoms","bond_order","bond_orders","bonds","bonds","bonds_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","cell_mut","charge","cleanup","clear_bonds","clear_bonds","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","count","covalent_radius","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","description","dihedral","dihedrals","dihedrals_count","distance","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","evaluate","extension","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","formats_list","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_matrix","full_name","get","get","get","guess_bonds","guess_format","has_velocities","id","impropers","impropers_count","index","infinite","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","iter","iter_atoms","last_error","len","lengths","list","mass","matrix","memory","memory_buffer","memory_writer","message","name","name","name","new","new","new","new","new","new","new","new","next","nsteps","open","open_with_format","out_of_plane","partial_cmp","partial_cmp","path","positions","positions","positions_mut","properties","properties","properties","provide","read","read","read_step","reference","remove","remove","remove_bond","remove_bond","residue","residue_for_atom","residues","residues_count","resize","resize","set","set","set","set_angles","set_atomic_type","set_cell","set_cell","set_charge","set_lengths","set_mass","set_name","set_shape","set_step","set_topology","set_topology","set_topology_file","set_topology_with_format","set_warning_callback","shape","size","size","size","size","size_hint","status","step","string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","topology","triclinic","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_cell","vdw_radius","velocities","velocities","velocities_mut","version","volume","with_id","wrap","write","write"],"q":[[0,"chemfiles"]],"d":["Amide bond (required by some file formats)","Aromatic bond (required by some file formats)","An <code>Atom</code> is a particle in the current <code>Frame</code>. It stores the …","An analog to a mutable reference to an atom (<code>&amp;mut Atom</code>)","An analog to a reference to an atom (<code>&amp;Atom</code>)","Possible bond order associated with bonds","Boolean property","Available unit cell shapes.","Exception in the C++ chemfiles library","Error in configuration files syntax","Double bond","Floating point property","Error type for Chemfiles.","Error while reading or writing a file","Error in file formatting, <em>i.e.</em> the file is invalid","<code>FormatMetadata</code> contains metadata associated with one …","A <code>Frame</code> contains data from one simulation step: the …","Infinite cell, to use when there is no cell.","A <code>Match</code> is a set of atomic indexes matching a given …","Error in memory allocations","<code>MemoryTrajectoryReader</code> is a handle for a <code>Trajectory</code> in …","Orthorhombic cell, with the three angles equals to 90°.","Error for out of bounds indexing","An iterator over the properties in an atom/frame/residue","A <code>Property</code> is a piece of data that can be associated with …","Error related to properties","Quadruple bond (present in some metals)","Quintuplet bond (present in some metals)","A <code>Residue</code> is a group of atoms belonging to the same …","An analog to a reference to a residue (<code>&amp;Residue</code>)","A <code>Selection</code> allow to select atoms in a <code>Frame</code>, from a …","Error in selection string syntax","Single bond","Possible causes of error in chemfiles","Exception in the C++ standard library","String property","No error","A <code>Topology</code> contains the definition of all the atoms in the …","An analog to a reference to a topology (<code>&amp;Topology</code>)","The <code>Trajectory</code> type is the main entry point when using …","Triclinic cell, with any values for the angles.","Triple bond","The given path is not valid UTF8","An <code>UnitCell</code> represent the box containing the atoms, and …","An analog to a mutable reference to an unit cell (…","An analog to a reference to an unit cell (<code>&amp;UnitCell</code>)","Unknown or unspecified bond order","3-dimensional vector property","Add the atom at index <code>atom</code> in this residue.","Add an <code>Atom</code> at the end of this topology","Add an <code>Atom</code> and the corresponding position and optionally …","Add a bond between the atoms at indexes <code>i</code> and <code>j</code> in the …","Add a bond between the atoms at indexes <code>i</code> and <code>j</code> in the …","Add a bond between the atoms at indexes <code>i</code> and <code>j</code> in the …","Add a bond between the atoms at indexes <code>i</code> and <code>j</code> in the …","Read configuration data from the file at <code>path</code>.","Add a residue to this topology.","Add a copy of <code>residue</code> to this frame.","Add velocity data to this frame. If the frame already have …","Get the angle formed by the atoms at indexes <code>i</code>, <code>j</code> and <code>k</code> in …","Get the three angles of the cell, in degrees.","Get the list of angles in the topology.","Get the number of angles in the topology.","Check if the two residues <code>first</code> and <code>second</code> from the …","Get a reference of the atom at the given <code>index</code> in this …","Get a reference to the atom at the given <code>index</code> in this …","Get a mutable reference to the atom at the given <code>index</code> in …","Get a mutable reference to the atom at the given <code>index</code> in …","Try to get the atomic number of the atom from the atomic …","Get the atom type.","Get the list of atoms of this residue.","Does this format support storing atom names or types?","Get the bond order for the bond between the atoms at …","Get the bond order for all the bonds in the topology","Get the list of bonds in the topology.","Does this format support storing bonds between atoms?","Get the number of bonds in the topology.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the <code>UnitCell</code> from this frame.","Get a mutable reference to the <code>UnitCell</code> from this frame.","Get the atom charge, in number of the electron charge <em>e</em>.","Clear any error from the C++ library","Remove all existing bonds, angles, dihedral angles and …","Remove all existing bonds, angles, dihedral angles and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the atom at index <code>i</code> is in this residue","","Try to get the covalent radius of the atom from the atomic …","","","","","","","","","","","","Extended, user-facing description of the format.","Get the dihedral angle formed by the atoms at indexes <code>i</code>, <code>j</code>…","Get the list of dihedral angles in the topology.","Get the number of dihedral angles in the topology.","Get the distance between the atoms at indexes <code>i</code> and <code>j</code> in …","","","","","","","","","","","","","","","","","","","","","Evaluate a selection for a given frame, and return the …","Extension associated with the format.","","","","","","","","","","","","","","","","","","","","","","Get the list of formats known by chemfiles, as well as all …","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Create an <code>UnitCell</code> from a cell matrix. If <code>matrix</code> contains …","Try to get the full name of the atom from the atomic type. …","Get a property with the given <code>name</code> in this atom, if it …","Get a property with the given <code>name</code> in this frame, if it …","Get a property with the given <code>name</code> in this frame, if it …","Guess the bonds, angles and dihedrals in this <code>frame</code>.","Get the format that chemfiles would use to read a file at …","Check if this frame contains velocity data.","Get the identifier of this residue in the initial topology …","Get the list of improper dihedral angles in the topology.","Get the number of improper dihedral angles in the topology.","","Create an <code>Infinite</code> <code>UnitCell</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterate over the atomic indexes in the match.","Gets an iterator over atoms","Get the last error message from the C++ library.","Get the length of the Match.","Get the three lengths of the cell, in Angstroms.","Evaluates a selection of size 1 on a given <code>frame</code>. This …","Get the atom mass, in atomic mass units.","Get the unit cell matricial representation.","Does this format support in-memory IO?","Obtain the memory buffer written to by the trajectory.","Write to a memory buffer as though it was a formatted file.","A message describing the error cause","Get the atom name.","Get the name of this residue.","Name of the format.","Read a memory buffer as though it was a formatted file.","Create an atom with the given <code>name</code>, and set the atom type …","Create an <code>Orthorhombic</code> <code>UnitCell</code> from the three lengths, in …","Create a new residue with the given <code>name</code>","Create a new empty topology.","Create an empty frame. It will be resized by the library …","Create a new match containing the atoms in the <code>atoms</code> slice.","Create a new selection from the given selection string.","","Get the number of steps (the number of frames) in a …","Open the file at the given <code>path</code> in the given <code>mode</code>.","Open the file at the given <code>path</code> using a specific file …","Get the out of plane distance formed by the atoms at …","","","Get file path for this trajectory.","Get a view into the positions of this frame.","Does this format support storing atomic positions?","Get a mutable view into the positions of this frame.","Get an iterator over all (name, property) pairs for this …","Get an iterator over all (name, property) pairs for this …","Get an iterator over all (name, property) pairs for this …","","Read the next step of this trajectory into a <code>frame</code>.","Is reading files in this format implemented?","Read a specific <code>step</code> of this trajectory into a <code>frame</code>.","URL pointing to the format definition/reference.","Remove an <code>Atom</code> from this topology by <code>index</code>. This modify …","Remove the atom at index <code>i</code> in this frame.","Remove any existing bond between the atoms at indexes <code>i</code> …","Remove any existing bond between the atoms at indexes <code>i</code> …","Get a reference to the residue at index <code>index</code> from this …","Get a copy of the residue containing the atom at index …","Does this format support storing residues?","Get the number of residues in this topology.","Resize this topology to hold <code>natoms</code> atoms, inserting dummy …","Resize the positions and the velocities in this frame, to …","Add a new <code>property</code> with the given <code>name</code> to this atom.","Add a new <code>property</code> with the given <code>name</code> to this residue.","Add a new <code>property</code> with the given <code>name</code> to this frame.","Set the three angles of the cell, in degrees.","Set the atom type to <code>atomic_type</code>.","Set the <code>UnitCell</code> of this frame to <code>cell</code>.","Set the unit <code>cell</code> associated with a trajectory. This cell …","Set the atom charge to <code>charge</code>, in number of the electron …","Set the three lengths of the cell, in Angstroms.","Set the atom mass to <code>mass</code>, in atomic mass units.","Set the atom name to <code>name</code>.","Set the shape of the unit cell to <code>shape</code>.","Set this frame step to <code>step</code>.","Set the <code>Topology</code> of this frame to <code>topology</code>.","Set the <code>topology</code> associated with this trajectory. This …","Set the topology associated with this trajectory by …","Set the topology associated with this trajectory by …","Use <code>callback</code> for every chemfiles warning. The callback …","Get the shape of the unit cell.","Get the number of atoms in this residue.","Get the current number of atoms in this topology.","Get the current number of atoms in this frame.","Get the size of the selection, i.e. the number of atoms we …","","The error status code","Get this frame step, i.e. the frame number in the …","Get the selection string used to create this selection.","","","","","","","","","","","","","","","Get a reference to the <code>Topology</code> of this frame.","Create an <code>Triclinic</code> <code>UnitCell</code> from the three lengths (in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does this format support storing unit cell information?","Try to get the Van der Waals radius of the atom from the …","Get a view into the velocities of this frame.","Does this format support storing atomic velocities?","Get a mutable view into the velocities of this frame.","Get the version of the chemfiles library.","Get the volume of the unit cell.","Create a new residue with the given <code>name</code> and <code>id</code> as …","Wrap a <code>vector</code> in this unit cell.","Write a <code>frame</code> to this trajectory.","Is writing files in this format implemented?"],"i":[10,10,0,0,0,0,28,0,24,24,10,28,0,24,24,0,0,25,0,24,0,25,24,0,0,24,10,10,0,0,0,24,10,0,24,28,24,0,0,0,25,10,24,0,0,0,10,28,1,3,5,3,5,3,5,0,3,5,5,5,15,3,3,3,3,5,3,5,4,4,1,29,3,3,3,29,3,32,31,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,32,31,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,5,5,4,13,3,5,13,24,4,25,15,1,10,3,5,26,27,28,29,13,24,4,25,15,1,10,3,5,26,27,28,29,10,1,31,4,32,18,19,22,23,33,34,32,19,23,13,29,5,3,3,5,4,15,1,3,5,35,27,13,24,25,10,26,28,29,13,24,25,10,26,29,27,29,13,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,0,32,31,13,13,13,24,4,18,19,25,25,15,22,23,1,33,10,10,3,34,5,35,26,27,28,28,28,28,28,28,29,15,4,4,1,5,5,0,5,1,3,3,26,15,32,31,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,31,26,26,5,13,26,15,27,4,15,29,35,35,13,4,1,29,32,4,15,1,3,5,26,27,31,35,35,35,5,10,28,35,5,29,5,4,1,5,13,35,29,35,29,3,5,3,5,3,3,29,3,3,5,4,1,5,15,4,5,35,4,15,4,4,15,5,5,35,35,35,0,15,1,3,5,27,31,13,5,27,13,24,4,25,15,1,10,3,5,26,27,28,29,13,5,15,32,31,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,32,31,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,32,31,13,24,4,18,19,25,15,22,23,1,33,10,3,34,5,35,26,27,28,29,29,4,5,29,5,0,15,1,15,35,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[3,4]],[[5,4,[7,[6]],[9,[[8,[[7,[6]]]]]]]],[[3,2,2]],[[5,2,2]],[[3,2,2,10]],[[5,2,2,10]],[[[12,[11]]],[[14,[13]]]],[[3,1],[[14,[13]]]],[[5,1],[[14,[13]]]],[5],[[5,2,2,2],6],[15,[[7,[6]]]],[3,[[16,[[7,[2]]]]]],[3,2],[[3,1,1],17],[[3,2],18],[[5,2],18],[[3,2],19],[[5,2],19],[4,20],[4,21],[1,[[16,[2]]]],0,[[3,2,2],10],[3,[[16,[10]]]],[3,[[16,[[7,[2]]]]]],0,[3,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,22],[5,23],[4,6],[[]],[3],[5],[13,13],[24,24],[4,4],[25,25],[15,15],[1,1],[10,10],[3,3],[5,5],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],30],[[1,2],17],[31,2],[4,6],[32],[18,4],[19,4],[22,15],[23,15],[33,1],[34,3],[32],[19,4],[23,15],[13,11],0,[[5,2,2,2,2],6],[3,[[16,[[7,[2]]]]]],[3,2],[[5,2,2],6],[4],[15],[1],[3],[5],[35],[27],[[13,13],17],[[24,24],17],[[25,25],17],[[10,10],17],[[26,26],17],[[28,28],17],[[29,29],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[27,5],[[16,[26]]]],0,[[13,36],37],[[13,36],[[14,[38]]]],[[24,36],37],[[4,36],37],[[18,36],37],[[19,36],37],[[25,36],37],[[15,36],37],[[22,36],37],[[23,36],37],[[1,36],37],[[33,36],37],[[10,36],37],[[3,36],37],[[34,36],37],[[5,36],37],[[35,36],37],[[26,36],37],[[27,36],37],[[28,36],37],[[29,36],37],[[],[[16,[29]]]],[[]],[[]],[39,13],[40,13],[[]],[[]],[[]],[[]],[[]],[41,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,10],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],28],[17,28],[[]],[21,28],[6,28],[11,28],[[]],[[[7,[[7,[6]]]]],15],[4,21],[[4,11],[[8,[28]]]],[[1,11],[[8,[28]]]],[[5,11],[[8,[28]]]],[5,[[14,[13]]]],[[[12,[43]]],[[14,[21,13]]]],[5,17],[1,[[8,[44]]]],[3,[[16,[[7,[2]]]]]],[3,2],[[26,2]],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[26,[[45,[2]]]],0,[[],21],[26,2],[15,[[7,[6]]]],[[27,5],[[16,[2]]]],[4,6],[15,[[7,[[7,[6]]]]]],0,[35,[[14,[11,13]]]],[[[9,[11]]],[[14,[35,13]]]],0,[4,21],[1,21],0,[[[9,[[47,[46]]]],[12,[11]]],[[14,[32,13]]]],[[[9,[11]]],4],[[[7,[6]]],15],[[[9,[11]]],1],[[],3],[[],5],[[[47,[2]]],26],[[[9,[11]]],[[14,[27,13]]]],[31,8],[35,2],[[[12,[43]],48],[[14,[35,13]]]],[[[12,[43]],48,[9,[11]]],[[14,[35,13]]]],[[5,2,2,2,2],6],[[10,10],[[8,[30]]]],[[28,28],[[8,[30]]]],[35,21],[5,[[47,[[7,[6]]]]]],0,[5,[[47,[[7,[6]]]]]],[4,31],[1,31],[5,31],[49],[[35,5],[[14,[13]]]],0,[[35,2,5],[[14,[13]]]],0,[[3,2]],[[5,2]],[[3,2,2]],[[5,2,2]],[[3,2],[[8,[33]]]],[[3,2],[[8,[33]]]],0,[3,20],[[3,2]],[[5,2]],[[4,11,[9,[28]]]],[[1,11,[9,[28]]]],[[5,11,[9,[28]]]],[[15,[7,[6]]],[[14,[13]]]],[[4,[9,[11]]]],[[5,15]],[[35,15]],[[4,6]],[[15,[7,[6]]],[[14,[13]]]],[[4,6]],[[4,[9,[11]]]],[[15,25],[[14,[13]]]],[[5,2]],[[5,3],[[14,[13]]]],[[35,3]],[[35,[12,[43]]],[[14,[13]]]],[[35,[12,[43]],[9,[11]]],[[14,[13]]]],0,[15,25],[1,2],[3,2],[5,2],[27,2],[31],0,[5,2],[27,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[5,34],[[[7,[6]],[7,[6]]],15],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,[4,6],[5,[[8,[[47,[[7,[6]]]]]]]],0,[5,[[8,[[47,[[7,[6]]]]]]]],[[],21],[15,6],[[[9,[11]],44],1],[[15,[7,[6]]]],[[35,5],[[14,[13]]]],0],"c":[],"p":[[3,"Residue"],[15,"usize"],[3,"Topology"],[3,"Atom"],[3,"Frame"],[15,"f64"],[15,"array"],[4,"Option"],[8,"Into"],[4,"BondOrder"],[15,"str"],[8,"AsRef"],[3,"Error"],[4,"Result"],[3,"UnitCell"],[3,"Vec"],[15,"bool"],[3,"AtomRef"],[3,"AtomMut"],[15,"u64"],[3,"String"],[3,"UnitCellRef"],[3,"UnitCellMut"],[4,"Status"],[4,"CellShape"],[3,"Match"],[3,"Selection"],[4,"Property"],[3,"FormatMetadata"],[4,"Ordering"],[3,"PropertiesIter"],[3,"MemoryTrajectoryReader"],[3,"ResidueRef"],[3,"TopologyRef"],[3,"Trajectory"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Utf8Error"],[4,"chfl_status"],[4,"chfl_cellshape"],[4,"chfl_bond_order"],[3,"Path"],[15,"i64"],[3,"Iter"],[15,"u8"],[15,"slice"],[15,"char"],[3,"Demand"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
